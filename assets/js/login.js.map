{"version":3,"file":"login.js","sources":["login.coffee"],"names":["___components","app","config","controller","directive","factory","k","mconfig","module","provider","ref","slice","angular","app_name","dev","presentation","log_simbol_end_time","log_view_time","sails_time_to_declare_disconect","configs","modules","name","fn","arr_str_modules","key","smodule","push","arr_config","namem","$sailsProvider","autoConnect","useCORSRouteToGetCookie","$provide","controlActivities","activities","activity","countActivitiesActives","existsActivities","getActivitiesCreated","getActivitiesFinished","getActivity","getHistory","getPercent","historyActivities","logControlActivities","newActivity","refreshViews","rootScope","callback","callbacks","endCallBack","this","prototype","runAllCallBack","indexCallback","results","_error","endCallback","end","callbackEnd","created","finished","lastCountInactive","_list","console","log","Object","keys","length","nameActivity","callBackActivities","activityCreated","activityFind","countLast","result","$apply","$get","$rootScope","$interval","createRootScope","count","get","new","percent","$routeProvider","$locationProvider","route","path","keyPath","spath","otherwise","String","when","Array","isArray","warn","redirectTo","templateUrl","html5Mode","alert","alerts","modelAlert","type","message","_onLogs","onLog","newAlert","data","j","len","logs","copy","msg","removeAlert","indexAlert","splice","aArray","arrs","SArr","arr","arrReturn","index","indexSArr","header","preModule","separator","styles1","stylesErr","virtualLog","styles","color","getHeaderArr","createTagLog","tags","getHeaderInline","e","getHeader","join","i","ret","getSkeletonHeader","getNewTime","headerInline","n","preMsgs","s","Date","toLocaleTimeString","toLocaleDateString","msgs","arguments","call","apply","error","domain","email","emailWeb","nameAndLastName","nameEmail","nameEmailWeb","web","regexp","isEmpty","value","useSymbol","symbol","valueFindSymbol","valueWithSymbol","indexOf","isEmail","Boolean","exec","name_controller","modules_param","fn_controller","$scope","$log","$sails","$location","logControllerApp","logSails","logStatusConnectionApp","title","callToGetTestMessages","solicitaMensajeDeTest","success","status","headers","jwr","reqExperimental","on","callTest","conectado","desconectado","setAppInDisconectOfTiemOut","sinEstado","timeToTimeoutConnect","appIsConnect","setTimeout","createSession","logLogin","loginError","usernameOrEmail","passwordVerific","rememberAccount","dataResult","keyToCreateSession","$event","keyCode","activityCrearUnaSesion","callLogin","loginCorrect","errorSys","post","login","logRecoveryPassword","sendRecovery","isErrorOnSystem","isSendEmail","isNoSendEmail","keyToCreateRecovery","activityRecoveryPassword","callRecoveryPassword","errorServer","passwordPolicy","policyRequired","minLengthPolycy","minLength","nMin","password","withUppercase","withLowercase","withNumber","withSign","repeatPassword","getLevelPassword","levelPassword","numberToTruePolicies","numberTotalPolicies","policies","policySingular","getTypePassword","isValidPassword","arrVerificaciones","isValid","policyVerific","verific","isValidRepeatPassword","configCtrl","policy","restrict","scope","fnNew","___min","___data","require","link","$element","$attrs","___addToData","$watch","newData","oldData","nRepeatAddToData","template","element","attr","nameData","html","$$isFotter","$$isHeader","$$isMidlle","$parent","$index","$$remove","countActivities","history","location","protocol","host","RegExp","pathname"],"mappings":"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","sourcesContent":["# login.coffee\n\n'use string'\n\n# Include Service Angular\n# _service_angular_app.coffee\n\nif angular?\n\n  # Carga el archivo con las configuraciones de la app.\n  ###\n    Variables config\n  ###\n  config =\n  \n    # Nombre de la aplicación\n    app_name     : 'ajenjo-login'\n    dev          : true\n    presentation : true\n  \n  \n    # log config\n    log_simbol_end_time : ': '\n    log_view_time       : true\n  \n    # Sails Config\n    sails_time_to_declare_disconect : 5000\n  \n\n\n  # Contiene la memoria para los componentes\n  ___components =\n    configs   : []\n    # directive : []\n    modules   : []\n\n\n\n  # Service Modulos\n  # _service_angular_directive.coffee\n  #\n  # Genera directive\n  #\n  \n  directive = (name, fn) ->\n    app.directive name, fn\n  \n\n  # _service_angular_moduler.coffee\n  \n  # Permite cagar los modulos desde una fuente externa.\n  module =\n    module: (arr_str_modules) ->\n      for key, smodule of arr_str_modules\n        ___components.modules.push smodule\n      return module\n    config: (arr_config) ->\n      ___components.configs.push arr_config\n      return module\n  \n\n  # _service_angular_factory.coffee\n  #\n  # gestina las factory de la app\n  #\n  \n  factory = (name, fn) ->\n    app.factory name, fn\n  \n\n  # _service_angular_provider.coffee\n  \n  provider = (namem, fn) ->\n      app.provider name, fn\n  \n\n\n\n\n  ###  Modulos  ###\n  # _angular_ngSails.coffee\n  # _angular_ngSails.coffee\n  \n  module\n    .module [\n      'ngSails'\n    ]\n    .config [\n      '$sailsProvider'\n      ($sailsProvider) ->\n        # $sailsProvider.url = \"http://localhost:1337/\"\n        # $sailsProvider.url = \"/\"\n        $sailsProvider.autoConnect = true\n        $sailsProvider.useCORSRouteToGetCookie = true\n  \n  \n        # do ->\n        #   setAutorun = -> try do _sailsIoJSConnect\n  \n        #   setTimeout setAutorun, 5000\n  \n  \n    ]\n  \n  \n  \n  \n  \n  # _angular_ngSanitize.coffee\n  \n  module\n    .module [\n      'ngSanitize'\n    ]\n  \n  # _angular_provider_progressBar.coffee\n  \n  # Example:\n  #\n  # Crear una actividad\n  #\n  # ```coffeescript\n  # activity1 = controlActivities.new 'test_activity_n1'\n  # ```\n  #\n  # Con un evento callback\n  #\n  # ```coffeescript\n  # activity2 = controlActivities.new 'test_activity_n1', ->\n  #       console.log \"Saludos desde el evento callback.\"\n  # ```\n  #\n  # Agregar un callback a la actividad ya creada.\n  #\n  # ```coffeescript\n  # activity1.callback ->\n  #     console.log \"Saludos desde el callback agregado.\"\n  # ```\n  #\n  # Agregar un callback final, ayuda a crear eventos que solo se pueden ejecutar si un collback normal ya ha sido ejecutado y solo se puede ejecutar cuando la actividad se este cerrando con el metodo `end()`.\n  #\n  # ```coffeescript\n  # activity1.endCallback ->\n  #     console.log \"Cerrando la actividad.\"\n  # ```\n  #\n  # Finalizar una actividad\n  #\n  # ```coffeescript\n  # do activity1.end\n  # ```\n  #\n  \n  module\n    .config [\n      '$provide'\n      ($provide) ->\n        $provide.provider 'controlActivities', controlActivities = ->\n  \n          #\n          # | Activity             |\n          # | -------------------- |\n          # | - _callbacks:Array   |\n          # | -------------------- |\n          # | + callback: function |\n          #\n          class activity\n  \n            constructor : (callback, @callbacks = [], @endCallBack = []) ->\n              if callback?\n                @callback callback\n  \n            runAllCallBack : ->\n              try do callback for indexCallback, callback of @callbacks\n  \n            callback : (callback) ->\n              @callbacks.push callback\n  \n            endCallback : (callback) ->\n              @endCallBack.push callback\n  \n            end : ->\n              try do @runAllCallBack\n              try do callbackEnd for indexCallback, callbackEnd of @endCallBack\n  \n  \n  \n          activities =\n            created           : 0\n            finished          : 0\n            lastCountInactive : 0\n            _list: {\n              # object:activity\n            }\n  \n  \n  \n          historyActivities = []\n  \n  \n          logControlActivities = console.log\n  \n  \n          countActivitiesActives = -> Object.keys(activities._list).length\n          existsActivities       = -> do countActivitiesActives isnt 0\n          getActivitiesCreated   = -> activities.created\n          getActivitiesFinished  = -> activities.finished\n          newActivity            = (nameActivity, callBackActivities) ->\n            activityCreated = new activity callBackActivities\n  \n            if not activities._list[nameActivity]?\n              activities.created++\n              historyActivities.push activityCreated\n  \n              activityCreated.endCallback ->\n                logControlActivities.log \"Se esta finalizando la actividad #{nameActivity}.\"\n                activities.finished++\n  \n                delete activities._list[nameActivity]\n  \n                # Asociando el ultimo conteo actividades creadas\n                if not do existsActivities\n                  activities.lastCountInactive = activities.created\n  \n                # Refresca las vista\n                do refreshViews\n  \n              # Asocia la actividad a la lista\n              activities._list[nameActivity] = activityCreated\n  \n              # Evita replicas del evento\n              getActivity nameActivity\n            else\n              false\n  \n  \n  \n          getActivity = (nameActivity) ->\n            activityFind = activities._list[nameActivity]\n  \n            if not activityFind?\n              activityFind = newActivity nameActivity\n  \n            activityFind\n  \n  \n          getPercent = ->\n            created   = do getActivitiesCreated\n            finished  = do getActivitiesFinished\n            countLast = activities.lastCountInactive\n  \n            # Algoritmo resultante\n            result = (finished - countLast) / (created - countLast)\n            if not do existsActivities\n              1\n            else\n              result || 0\n  \n          getHistory = -> activities._list\n  \n          rootScope = null\n  \n          refreshViews = ->\n            do rootScope?.$apply?\n  \n          $get: [\n            '$rootScope'\n            'log'\n            '$interval'\n            ($rootScope, log, $interval) ->\n              logControlActivities = new log \"Control Activities\"\n  \n              createRootScope = ->\n                rootScope = $rootScope\n  \n              do createRootScope\n  \n              {\n                \"count\"    : countActivitiesActives\n                \"created\"  : getActivitiesCreated\n                \"finished\" : getActivitiesFinished\n                \"get\"      : getActivity\n                \"new\"      : newActivity\n                \"percent\"  : getPercent\n                activity\n                countActivitiesActives\n                existsActivities\n                getActivitiesCreated\n                getActivitiesFinished\n                getActivity\n                getHistory\n                getPercent\n                newActivity\n              }\n  \n          ]\n  \n    ]\n  \n  ### Module Route ###\n  \n  module\n    .module [\n      'ngRoute'\n    ]\n    .config [\n      '$routeProvider'\n      '$locationProvider'\n      ($routeProvider, $locationProvider) ->\n  \n        route = (path, config) ->\n  \n          # Ruta por defecto\n          if path == 'otherwise'\n            $routeProvider.otherwise config\n          else\n            # Si la ruta es un string\n            if typeof path is 'string' or path instanceof String\n              $routeProvider.when path, config\n            # Si la ruta es un Array\n            else if Array.isArray path\n              for keyPath, spath of path\n                route spath, config\n            else\n              console.warn \"El path\", path, \"requiere que sea un Array<String> o String.\"\n  \n        # Carga las rutas definidas\n        # Ejemplos\n        #\n        # route '/books/:book',\n        #   redirectTo: '/book2'\n        #\n        # route '/book2/:var/c',\n        #   soluto: factory: ->\n        #     console.log 'ok'\n        #\n        # route '/l/',\n        #   controller  : 'exampleController'\n        #   templateUrl : 'eltemplte.html'\n        #\n        \n        route 'otherwise',\n          redirectTo: '/login'\n        \n        route '/login',\n          templateUrl : 'login_page'\n          controller  : 'loginCtrl'\n        \n        route '/recovery',\n          templateUrl : 'recovery_password_page'\n          controller  : 'recoveryPasswordCtrl'\n        \n        route '/reset/password/:index/:verific',\n          controller  : 'resetPassword'\n          templateUrl : 'reset_password_page'\n        \n  \n  \n  \n        $locationProvider.html5Mode false\n        #   enable: true\n        #   requireBase: false\n    ]\n  \n  ### Module bootstrap ###\n  \n  module\n    .module [\n      'ui.bootstrap'\n    ]\n  \n\n  ###  Fin de Modulos  ###\n\n\n\n  #\n  # Include APP\n  # Inicializa la palicación cargando los modulos y la app.\n  # require el nombre definida en las configuraciones\n  #\n  app = angular.module config.app_name, ___components.modules\n\n  # Include All Factorys\n  # _factory_alerts_attac.coffee\n  factory 'alert', ->\n    class alert\n  \n        # Data Alert\n        alerts      : []\n        modelAlert  : {type: 'warning', message: ''}\n  \n        _onLogs: []\n  \n        # Evento para genera un log\n        onLog: (fn) ->\n          @_onLogs.push fn\n  \n        # Function Alert\n        newAlert    : (data) ->\n  \n          # Crea un model de la alerta\n          modelAlert = angular.copy @modelAlert\n  \n          # Asocia los valores a la alerta\n          modelAlert.message = data.msg or data.message if data?.msg? or data?.message?\n          modelAlert.type    = data.type if data?.type?\n  \n          # Genera los logs\n          logs data, modelAlert for logs in @_onLogs\n  \n          # Crea la alerta\n          @alerts.push modelAlert\n  \n        removeAlert : (indexAlert) -> @alerts.splice indexAlert, 1\n  \n    alert\n  \n  # _factory_logs_attac.coffee\n  \n  # Crea estructuas de mensajes\n  #\n  # Example:\n  #\n  # ## Crear una nueva alerta\n  #\n  # ```coffeescript\n  # logModuleUser = new log 'Module User'\n  # ```\n  #\n  # ## Alerta Simple\n  #\n  # ```coffescript\n  # data = [3,67,2]\n  #\n  # logModuleUser.log 'Se muestran los siguientes errores: ', data\n  # ```\n  #\n  # ## Crea una sub alerta\n  #\n  # ```coffeescript\n  # logSubModuloUser = new log 'Sub Modulo', logModuleUser\n  # user = \"Loqui\"\n  #\n  # logSubModuloUser.log 'Se esta cargando el usuario:', user\n  # ```\n  #\n  # ## Crea un alerta de error\n  #\n  # ```coffeescript\n  # logSubModuloUser.error 'No se ha podido cargar el usuario:', user\n  # ```\n  \n  factory 'log', ->\n  \n    aArray = (arrs)->\n      arrReturn = []\n      for index, arr of arrs\n        if Array.isArray arr\n          for indexSArr, SArr of arr\n            arrReturn.push SArr\n        else\n          arrReturn.push arr\n  \n      # console.log arrReturn\n      arrReturn\n  \n  \n  \n    # Genera logs basados\n    ###log54126###\n    class log\n  \n      constructor: (\n        @header     = null,\n        @preModule  = null,\n        @separator  = \" > \",\n        @styles     = {color : \"green\"},\n        @stylesErr  = {color : \"red\"},\n        @virtualLog = console.log\n        ) ->\n  \n  \n      getHeaderArr: ->\n        # [\"%c#{@header}\", (\"#{keyStyle}:#{style};\" for keyStyle, style of @styles)...]\n        [\"#{@header}\"]\n  \n      # Retorna una cabezera con todas las etiqueas del log y de los logs padres\n      createTagLog: ->\n        if @preModule?\n  \n          tags = []\n          tags.push do @preModule.createTagLog\n          tags.push do @getHeaderArr\n  \n        else\n          tags = do @getHeaderArr\n  \n        aArray tags\n  \n      getHeaderInline: ->\n        (\"#{e}\" for e in do @getHeader).join(@separator)\n  \n      getHeader: ->\n  \n        ret = (i for k,i of do @createTagLog)\n        ret\n  \n      getSkeletonHeader: (styles) ->\n  \n        preMsgs = []\n        headerInline = do @getHeaderInline\n        getNewTime = new Date\n  \n        preMsgs.push \"%c[\"\n  \n        if config.log_view_time\n          preMsgs.push \"#{getNewTime.toLocaleTimeString()} #{getNewTime.toLocaleDateString()}#{config.log_simbol_end_time}\"\n  \n        preMsgs.push headerInline\n        preMsgs.push \"]:\"\n  \n        preMsgs = [(\"#{e}\" for e in preMsgs).join(''), (\"#{n}:#{s}\" for n,s of styles).join(';')]\n  \n  \n      log: (msgs...) ->\n        preMsgs = []\n  \n        preMsgs.push (@getSkeletonHeader @styles)...\n        preMsgs.push msgs...\n  \n        if config.dev then console.log.apply console, preMsgs\n  \n      error: (msgs...) ->\n        preMsgs = []\n  \n        preMsgs.push (@getSkeletonHeader @stylesErr)...\n        preMsgs.push msgs...\n  \n        if config.dev then console.log.apply console, preMsgs\n  \n  \n    return log\n  \n  # _factory_verific_data_attac.coffee\n  \n  #\n  # Contiene una serie de funciones que permite validar siertos tipos de datos.\n  #\n  # Por ejemplo\n  #\n  # verificData.isEmpty('')\n  #\n  \n  factory 'verificData', ->\n  \n    # Match RegExp\n    domain          = \"[a-zA-Z0-9\\\\.\\\\_\\\\-]+\\\\.[a-zA-Z0-9]+\"\n    email           = \"[a-zA-Z0-9\\\\_\\\\-\\\\.\\\\%]+\\\\@#{domain}\"\n    web             = \"[a-zA-Z0-9\\\\?\\\\$\\\\#\\\\/\\\\:\\\\.\\\\-_%\\\\&]+\"\n    nameEmail       = \"\\\"{0,}([a-zA-Z][a-zA-Z ]+)\\\"{0,}\\\\s{0,}<(#{email})>\"\n    nameEmailWeb    = \"#{nameEmail}[\\\\s]{0,}\\\\((#{web})\\\\)\"\n    emailWeb        = \"<(#{email})>[\\\\s]{0,}\\\\((#{web})\\\\)\"\n    nameAndLastName = \"\\\"{0,}([a-zA-Z]+)([a-zA-Z ]+)\\\"{0,}\"\n  \n    regexp:\n      email           : email\n      nameEmail       : nameEmail\n      nameEmailWeb    : nameEmailWeb\n      emailWeb        : emailWeb\n      nameAndLastName : nameAndLastName\n  \n    isEmpty: (value) ->\n      !value\n  \n    useSymbol: (symbol, value) ->\n      valueFindSymbol = value?.indexOf? symbol\n      valueWithSymbol = valueFindSymbol isnt -1 and valueFindSymbol isnt undefined\n  \n      valueWithSymbol\n  \n    isEmail: (value) ->\n      Boolean /^[a-zA-Z0-9\\._%\\+\\-]+@[a-zA-Z0-9\\-\\+]+\\.[a-zA-Z0-9]+$/ig.exec value\n  \n\n\n  # Load Provider\n  #= require ../provider/_*.coffee\n\n  ### Carga la aplicación ###\n  ### Controladores ###\n  \n  controller = (name_controller, modules_param, fn_controller) ->\n    modules_param.push fn_controller\n    app.controller name_controller, modules_param\n  ### Gestiona los permisos ###\n  controller 'AppCtrl', [\n    '$scope'\n    '$rootScope'\n    '$log'\n    'log'\n    'controlActivities'\n    '$sails'\n    '$location'\n    ],\n    ($scope, $rootScope, $log, log, controlActivities, $sails, $location) ->\n  \n  \n      $rootScope.title = 'Login'\n  \n      logControllerApp       = new log 'Ctrl APP'\n      logSails               = new log 'Sails', logControllerApp\n      logStatusConnectionApp = new log 'Status Connection', logControllerApp\n  \n  \n      do ->\n  \n        callToGetTestMessages = ->\n  \n          solicitaMensajeDeTest = $sails.get '/test'\n  \n          solicitaMensajeDeTest.success (data, status, headers, jwr) ->\n            $rootScope.reqExperimental = data\n  \n        $sails.on 'connect', callToGetTestMessages\n  \n        $rootScope.callTest = callToGetTestMessages\n  \n      # Control de estado, si se precenta la aplicacion conectada o no. Permite\n      # leer una variable global que identifica su estado.\n      do ->\n        sinEstado    = -1\n        desconectado = 0\n        conectado    = 1\n  \n        timeToTimeoutConnect = config.sails_time_to_declare_disconect\n  \n        $rootScope.appIsConnect = sinEstado\n  \n        setAppInDisconectOfTiemOut = ->\n          if $rootScope.appIsConnect is sinEstado\n            $rootScope.appIsConnect = desconectado\n            logStatusConnectionApp.log \"Se cambio el estado de la aplicación debido a no estar conectado en\", timeToTimeoutConnect, \"segundos.\"\n            try do $rootScope.$apply\n  \n        setTimeout setAppInDisconectOfTiemOut, timeToTimeoutConnect\n  \n        # $rootScope.appIsConnect = desconectado\n        $sails.on 'connect', () ->\n          logStatusConnectionApp.log \"Se ha conectado la aplicación.\"\n          $rootScope.appIsConnect = conectado\n  \n        $sails.on 'disconnect', () ->\n          logStatusConnectionApp.log \"Esta ha desconectado la aplicación.\"\n          $rootScope.appIsConnect = desconectado\n  \n  # _controller_login.coffee\n  \n  controller 'loginCtrl', [\n    '$scope'\n    '$sails'\n    'log'\n    '$rootScope'\n    'controlActivities'\n    '$location'\n    ],\n    ($scope, $sails, log, $rootScope, controlActivities, $location) ->\n      # Declara loginError\n      $scope.loginError = false\n  \n      logLogin = new log 'Login'\n  \n      $scope.data =\n        usernameOrEmail: null\n        passwordVerific: null\n        rememberAccount: false\n  \n      $scope.dataResult = {}\n      $scope.loginError = false\n  \n      $scope.keyToCreateSession = ($event) ->\n        if $event.keyCode is 13\n          do createSession\n  \n      createSession = ->\n        activityCrearUnaSesion = controlActivities.get 'activity_crear_una_sesion'\n  \n        if $rootScope.appIsConnect <= 0\n  \n          $scope.loginError   = false\n          $scope.loginCorrect = false\n          $scope.errorSys     = true\n  \n          do activityCrearUnaSesion.end\n  \n        else\n  \n          callLogin = $sails.post '/api/login', $scope.data\n  \n          callLogin.success (data, status, headers, jwr) ->\n            $scope.dataResult = data\n  \n            $scope.loginError   = data.loginError\n            $scope.loginCorrect = data.loginCorrect\n            $scope.errorSys     = false\n  \n  \n          callLogin.error   (data, status, headers, jwr) ->\n            $scope.dataResult = data\n  \n            $scope.loginError   = false\n            $scope.loginCorrect = false\n            $scope.errorSys     = false\n  \n  \n            logLogin.log \"El inicio de sesion ha fallado.\"\n  \n  \n        callLogin.finally (data, status, headers, jwr) ->\n          do activityCrearUnaSesion.end\n  \n  \n      $scope.login = createSession\n  \n  \n      if config.dev\n        $scope.data.usernameOrEmail = 'a'\n        $scope.data.passwordVerific = '1234'\n  \n  \n  \n  \n  # _controller_recoveryPassword.coffee\n  #\n  \n  controller 'recoveryPasswordCtrl', [\n    '$scope'\n    '$sails'\n    'log'\n    'controlActivities'\n    '$rootScope'\n    ], ($scope, $sails, log, controlActivities, $rootScope) ->\n  \n  \n      logRecoveryPassword = new log 'Recovery Password'\n  \n      $scope.isErrorOnSystem = false\n      $scope.isSendEmail     = false\n      $scope.isNoSendEmail   = false\n  \n  \n      $scope.data =\n        email: null\n  \n  \n      $scope.keyToCreateRecovery = ($event) ->\n        if $event.keyCode is 13\n          do sendRecovery\n  \n  \n      sendRecovery = ->\n  \n        sinEstado    = -1\n        desconectado = 0\n        conectado    = 1\n  \n        if $rootScope.appIsConnect is sinEstado or $rootScope.appIsConnect is desconectado\n          $scope.isErrorOnSystem = true\n        else\n  \n          activityRecoveryPassword = controlActivities.get 'Recovery Password'\n  \n          callRecoveryPassword = $sails.post '/api/recovery', $scope.data\n  \n          callRecoveryPassword.success (data, status, headers, jwr) ->\n  \n            logRecoveryPassword.log 'Return Data Recovery:', data\n  \n            $scope.isErrorOnSystem = data.errorServer\n  \n            if data.isSendEmail\n              $scope.isSendEmail = true\n              $scope.isNoSendEmail = false\n            else\n              $scope.isSendEmail = false\n              $scope.isNoSendEmail = true\n  \n  \n  \n          callRecoveryPassword.error (data, status, headers, jwr) ->\n          callRecoveryPassword.finally (data, status, headers, jwr) ->\n            do activityRecoveryPassword.end\n  \n  \n  \n      if config.dev\n        $scope.data.email = \"a@e.c\"\n  \n  \n      # Declaración el el scope\n      $scope.sendRecovery = sendRecovery\n  \n  # _controller_reset_password.coffee\n  \n  controller 'resetPassword', [\n    '$scope'\n    '$sails'\n    'log'\n    'controlActivities'\n    '$rootScope'\n    ],\n    ($scope, $sails, log, controlActivities, $rootScope) ->\n  \n  \n  \n      config =\n        minLengthPolycy: 6\n  \n  \n  \n      passwordPolicy =\n        minLength: (nMin = config.minLengthPolycy) ->\n          if data.password.length >= nMin then true\n          else false\n        withUppercase: ->\n          if /[A-Z]/g.exec(data.password) then true\n          else false\n        withLowercase: ->\n          if /[a-z]/g.exec(data.password) then true\n          else false\n        withNumber: ->\n          if /[0-9]/g.exec(data.password) then true\n          else false\n        withSign: ->\n          if ///[\n            \\°\\|\\¬\\!\\\"\\#\\$\\%\\&\\/\\(\\)\\=\\?\\'\\\\\\¿\\¡\\´\\¨\\*\\+\\~\\[\\]\\{\\}\\^\\`\\;\\,\\:\\.\\-\\_\\s\n            ]///ig.exec(data.password) then true\n          else false\n  \n      policyRequired = ['minLength']\n  \n      data =\n        password: ''\n        repeatPassword: ''\n        getLevelPassword: ->\n          policies = [\n            do passwordPolicy.minLength\n            do passwordPolicy.withLowercase\n            do passwordPolicy.withNumber\n            do passwordPolicy.withSign\n            do passwordPolicy.withUppercase\n            passwordPolicy.minLength 10\n          ]\n  \n          numberToTruePolicies = 0\n          numberTotalPolicies = policies.length\n  \n          for policySingular in policies\n            if policySingular\n              numberToTruePolicies++\n  \n          levelPassword = (numberToTruePolicies / numberTotalPolicies) * 100\n  \n          console.log levelPassword\n  \n          levelPassword\n  \n        getTypePassword: ->\n          levelPassword = do data.getLevelPassword\n  \n          switch\n            when levelPassword < 25  then 'danger'\n            when levelPassword < 50  then 'warning'\n            when levelPassword < 75  then 'info'\n            when levelPassword < 100 then 'default'\n            else 'success'\n  \n  \n        isValidPassword: ->\n          isValid = true\n          arrVerificaciones = (try do passwordPolicy[policyVerific] for policyVerific in policyRequired)\n  \n          for verific in arrVerificaciones\n            if verific is false then isValid = false\n  \n          isValid\n  \n        isValidRepeatPassword: ->\n          if data.password is data.repeatPassword then true\n          else false\n  \n  \n  \n      $scope.configCtrl = config\n      $scope.data       = data\n      $scope.policy     = passwordPolicy\n  \n  \n  \n  ### End Comtroladores ###\n  \n\n  ### Fin de Carga la aplicación ###\n  # _directive_boxSearch.coffee\n  #\n  # Permite obtener valores que requieren de multiples valores.\n  #\n  # Example:\n  # <div form-repeat-element=\"data\">\n  #     <div form-repeat-element-singular>\n  #         Nombre\n  #         <input form-repeat-element-value name=\"name\" type=\"text\" value=\"\">\n  #     </div>\n  # </div>\n  #\n  # Return Example:\n  # data = [\n  #     {\n  #         \"name\" : \"Juan\"\n  #     },\n  #     {\n  #         \"name\" : \"Diego\"\n  #     }\n  # ]\n  #\n  \n  # Esta diractiva es capas de manejar los datos con los que se alimanta\n  directive 'formRepeatElement', () ->\n  \n    restrict: 'EA'\n    # replace: false\n  \n    scope:\n      fnNew: \"=\"\n      ___min: \"=minInit\"\n      ___data: \"=ngModel\"\n  \n    require: []\n  \n    link: ($scope, $element, $attrs) ->\n  \n    controller: [\n      '$scope'\n      '$attrs'\n      ($scope, $attrs) ->\n        ___addToData = -> $scope.___data.push {}\n  \n        $scope.fnNew = ->\n          do ___addToData\n  \n  \n        # console.log\n        if $scope.___data is undefined\n          $scope.___data = []\n  \n        # Si el numero de reviciones es mayor a la cantidad de datos, este crese.\n        $scope.$watch '___min', (newData, oldData) ->\n          nRepeatAddToData = (($scope.___min || 1) + 1) - ($scope.___data.length)\n  \n          if nRepeatAddToData > 1\n            while nRepeatAddToData -= 1\n              do ___addToData\n  \n    ]\n  \n    template: (element, attr) ->\n      return \"<span class=\\\"form-single-element\\\" ng-repeat=\\\"#{attr.nameData||'$$data'} in ___data\\\">#{element.html()}</span>\"\n  \n  directive 'formSingleElement', ->\n    restrict: 'C'\n    scope: false\n    controller: [\n      '$scope'\n      ($scope) ->\n        $$isMidlle = ->\n          if not do $$isFotter and not do $$isHeader\n            true\n          else\n            false\n        $$isFotter = ->\n          ($scope.$parent.___data.length - 1) is $scope.$index\n        $$isHeader = ->\n          $scope.$index == 0\n  \n        $scope.$$isFotter = $$isFotter\n        $scope.$$isHeader = $$isHeader\n        $scope.$$isMidlle = $$isMidlle\n  \n    ]\n  \n  directive 'formRemoveElement', ->\n    restrict: 'EA'\n    scope: false\n    controller: [\n      \"$scope\"\n      ($scope) ->\n        $scope.$$remove = ->\n          $scope.$parent.$parent.___data.splice($scope.$index, 1)\n          # console.log \"Remove element #{}\",\n  \n    ]\n  \n  # _directive_controlActivities.coffee\n  directive 'controlActivities', () ->\n    # restrict: \"E\"\n  \n    controller: [\n      'controlActivities'\n      '$scope'\n      'log'\n      (controlActivities, $scope, log) ->\n  \n        logControlActivities = new log 'Control Activities'\n  \n        $scope.existsActivities     = controlActivities.existsActivities\n        $scope.percent              = controlActivities.getPercent\n  \n        $scope.countActivities      = controlActivities.count\n        # $scope.createdActivities  = controlActivities.created\n        $scope.history              = controlActivities.getHistory\n        # $scope.finishedActivities = controlActivities.finished\n        # $scope.progress           = controlActivities.progress\n  \n    ]\n  \n  \n\n\n  #\n  # Carga las configuraciones de los componentes\n  #\n  for k, mconfig of ___components.configs\n    app.config mconfig\n\n\n\nconsole.log \"-- End Runing --\" if config.dev\n\nconsole.log \"%c\", \"\n  padding:3px 174px;\n  line-height: 20px;\n  background-repeat:no-repeat;\n  background-size: auto 100%;\n  background-position:button left;\n  background-image: url(\\\"#{location.protocol}//#{location.host}#{new RegExp('.{0,}/').exec(location.pathname)}/imgs/logo348.png\\\");\n\" if config.dev or config.presentation\n\n"],"sourceRoot":"/source/"}